apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "idea"
apply plugin: "jacoco"
apply plugin: "io.spring.dependency-management"

apply from: rootProject.file("gradle/checkcode.gradle")

repositories {
    mavenLocal()

    maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    api "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    api "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0"
}

dependencyManagement {
    dependencies {
        dependencySet(group: 'org.springframework.boot', version: "$springBootVersion") {
            entry 'spring-boot-starter-web'
            entry 'spring-boot-starter-undertow'
            entry 'spring-boot-starter-log4j2'
            entry 'spring-boot-autoconfigure'
            entry 'spring-boot-starter-test'
            entry 'spring-boot-starter-cache'
            entry 'spring-boot-starter-security'
            entry 'spring-boot-starter-validation'
            entry 'spring-boot-starter-jdbc'
            entry 'spring-boot-starter-webflux'
        }
        dependencySet(group: 'io.springfox', version: '2.9.2') {
            entry 'springfox-swagger2'
            entry 'springfox-swagger-ui'
        }
        dependencySet(group: 'de.codecentric', version: '2.3.1') {
            entry 'spring-boot-admin-starter-client'
            entry 'spring-boot-admin-starter-server'
        }
        dependencySet(group: 'com.netflix.hystrix', version: '1.5.18') {
            entry 'hystrix-javanica'
            entry 'hystrix-core'
            entry 'hystrix-metrics-event-stream'
        }
        dependency group: 'org.springframework.data', name: 'spring-data-commons', version: '2.0.7.RELEASE'
        dependency group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.0.1'
        dependency group: 'com.auth0', name: 'java-jwt', version: '3.9.0'
        dependency group: 'com.h2database', name: 'h2', version: '1.4.196'
        dependency group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
        dependency group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
        dependency group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
        dependency group: 'org.asynchttpclient', name: 'async-http-client', version: '2.12.3'
        dependency group: 'commons-io', name: 'commons-io', version: '2.6'
        dependency group: 'com.google.guava', name: 'guava', version: '20.0'
        dependency group: 'org.assertj', name: 'assertj-core', version: '3.12.1'
        dependency group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
        dependency group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
        dependency group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.8.5'
        dependency 'io.lettuce:lettuce-core:5.1.8.RELEASE'
        dependency 'com.github.kstyrc:embedded-redis:0.6'
        dependency 'org.redisson:redisson:3.13.5'
        dependency 'org.jolokia:jolokia-core:1.6.2'
        dependency 'io.opentracing.contrib:opentracing-spring-jaeger-web-starter:3.1.1'
        dependency 'io.opentracing:opentracing-mock:0.33.0'
    }
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations {
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'ch.qos.logback', module: 'logback-core'
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/entity/**', '**/config/**', '**/model/**', '**/constants/**', '**/constant/**', '**/response/**', '**/request/**',
                    '**/exception/**','**/common/**','**/*Application.class','**/*Properties.class','**/core/**'])
        })
    }
}